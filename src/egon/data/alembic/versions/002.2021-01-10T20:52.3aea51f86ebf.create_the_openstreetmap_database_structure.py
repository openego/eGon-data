"""Create the OpenStreetMap database structure

Revision ID: 3aea51f86ebf
Revises: 79833aa6bc04
Create Date: 2021-01-10 20:52:22.884864+00:00

"""
from alembic import op
from sqlalchemy.dialects import postgresql
import sqlalchemy as sa

# Revision identifiers, used by Alembic.
revision = "3aea51f86ebf"
down_revision = "79833aa6bc04"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "osm_line",
        sa.Column("osm_id", sa.BigInteger(), nullable=True),
        sa.Column("access", sa.Text(), nullable=True),
        sa.Column("addr:housename", sa.Text(), nullable=True),
        sa.Column("addr:housenumber", sa.Text(), nullable=True),
        sa.Column("addr:interpolation", sa.Text(), nullable=True),
        sa.Column("admin_level", sa.Text(), nullable=True),
        sa.Column("aerialway", sa.Text(), nullable=True),
        sa.Column("aeroway", sa.Text(), nullable=True),
        sa.Column("amenity", sa.Text(), nullable=True),
        sa.Column("area", sa.Text(), nullable=True),
        sa.Column("barrier", sa.Text(), nullable=True),
        sa.Column("bicycle", sa.Text(), nullable=True),
        sa.Column("brand", sa.Text(), nullable=True),
        sa.Column("bridge", sa.Text(), nullable=True),
        sa.Column("boundary", sa.Text(), nullable=True),
        sa.Column("building", sa.Text(), nullable=True),
        sa.Column("construction", sa.Text(), nullable=True),
        sa.Column("covered", sa.Text(), nullable=True),
        sa.Column("culvert", sa.Text(), nullable=True),
        sa.Column("cutting", sa.Text(), nullable=True),
        sa.Column("denomination", sa.Text(), nullable=True),
        sa.Column("disused", sa.Text(), nullable=True),
        sa.Column("embankment", sa.Text(), nullable=True),
        sa.Column("foot", sa.Text(), nullable=True),
        sa.Column("generator:source", sa.Text(), nullable=True),
        sa.Column("harbour", sa.Text(), nullable=True),
        sa.Column("highway", sa.Text(), nullable=True),
        sa.Column("historic", sa.Text(), nullable=True),
        sa.Column("horse", sa.Text(), nullable=True),
        sa.Column("intermittent", sa.Text(), nullable=True),
        sa.Column("junction", sa.Text(), nullable=True),
        sa.Column("landuse", sa.Text(), nullable=True),
        sa.Column("layer", sa.Text(), nullable=True),
        sa.Column("leisure", sa.Text(), nullable=True),
        sa.Column("line", sa.Text(), nullable=True),
        sa.Column("lock", sa.Text(), nullable=True),
        sa.Column("man_made", sa.Text(), nullable=True),
        sa.Column("military", sa.Text(), nullable=True),
        sa.Column("motorcar", sa.Text(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("natural", sa.Text(), nullable=True),
        sa.Column("office", sa.Text(), nullable=True),
        sa.Column("oneway", sa.Text(), nullable=True),
        sa.Column("operator", sa.Text(), nullable=True),
        sa.Column("place", sa.Text(), nullable=True),
        sa.Column("population", sa.Text(), nullable=True),
        sa.Column("power", sa.Text(), nullable=True),
        sa.Column("power_source", sa.Text(), nullable=True),
        sa.Column("public_transport", sa.Text(), nullable=True),
        sa.Column("railway", sa.Text(), nullable=True),
        sa.Column("ref", sa.Text(), nullable=True),
        sa.Column("religion", sa.Text(), nullable=True),
        sa.Column("route", sa.Text(), nullable=True),
        sa.Column("service", sa.Text(), nullable=True),
        sa.Column("sidewalk", sa.Text(), nullable=True),
        sa.Column("shop", sa.Text(), nullable=True),
        sa.Column("sport", sa.Text(), nullable=True),
        sa.Column("surface", sa.Text(), nullable=True),
        sa.Column("toll", sa.Text(), nullable=True),
        sa.Column("tourism", sa.Text(), nullable=True),
        sa.Column("tower:type", sa.Text(), nullable=True),
        sa.Column("tracktype", sa.Text(), nullable=True),
        sa.Column("tunnel", sa.Text(), nullable=True),
        sa.Column("water", sa.Text(), nullable=True),
        sa.Column("waterway", sa.Text(), nullable=True),
        sa.Column("wetland", sa.Text(), nullable=True),
        sa.Column("width", sa.Text(), nullable=True),
        sa.Column("wood", sa.Text(), nullable=True),
        sa.Column("z_order", sa.Integer(), nullable=True),
        sa.Column("way_area", sa.Float(), nullable=True),
        sa.Column("abandoned:aeroway", sa.Text(), nullable=True),
        sa.Column("abandoned:amenity", sa.Text(), nullable=True),
        sa.Column("abandoned:building", sa.Text(), nullable=True),
        sa.Column("abandoned:landuse", sa.Text(), nullable=True),
        sa.Column("abandoned:power", sa.Text(), nullable=True),
        sa.Column("area:highway", sa.Text(), nullable=True),
        sa.Column(
            "tags", postgresql.HSTORE(text_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "geom",
            geoalchemy2.types.Geometry(geometry_type="LINESTRING", srid=3857),
            nullable=True,
        ),
        sa.Column(
            "gid",
            sa.Integer(),
            server_default=sa.text(
                "nextval('openstreetmap.osm_line_gid_seq'::regclass)"
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("gid"),
        schema="openstreetmap",
    )
    op.create_index(
        op.f("ix_openstreetmap_osm_line_geom"),
        "osm_line",
        ["geom"],
        unique=False,
        schema="openstreetmap",
    )
    op.create_index(
        op.f("ix_openstreetmap_osm_line_tags"),
        "osm_line",
        ["tags"],
        unique=False,
        schema="openstreetmap",
    )
    op.create_table(
        "osm_nodes",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("lat", sa.Integer(), nullable=False),
        sa.Column("lon", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="openstreetmap",
    )
    op.create_table(
        "osm_point",
        sa.Column("osm_id", sa.BigInteger(), nullable=True),
        sa.Column("access", sa.Text(), nullable=True),
        sa.Column("addr:housename", sa.Text(), nullable=True),
        sa.Column("addr:housenumber", sa.Text(), nullable=True),
        sa.Column("addr:interpolation", sa.Text(), nullable=True),
        sa.Column("admin_level", sa.Text(), nullable=True),
        sa.Column("aerialway", sa.Text(), nullable=True),
        sa.Column("aeroway", sa.Text(), nullable=True),
        sa.Column("amenity", sa.Text(), nullable=True),
        sa.Column("area", sa.Text(), nullable=True),
        sa.Column("barrier", sa.Text(), nullable=True),
        sa.Column("bicycle", sa.Text(), nullable=True),
        sa.Column("brand", sa.Text(), nullable=True),
        sa.Column("bridge", sa.Text(), nullable=True),
        sa.Column("boundary", sa.Text(), nullable=True),
        sa.Column("building", sa.Text(), nullable=True),
        sa.Column("capital", sa.Text(), nullable=True),
        sa.Column("construction", sa.Text(), nullable=True),
        sa.Column("covered", sa.Text(), nullable=True),
        sa.Column("culvert", sa.Text(), nullable=True),
        sa.Column("cutting", sa.Text(), nullable=True),
        sa.Column("denomination", sa.Text(), nullable=True),
        sa.Column("disused", sa.Text(), nullable=True),
        sa.Column("ele", sa.Text(), nullable=True),
        sa.Column("embankment", sa.Text(), nullable=True),
        sa.Column("foot", sa.Text(), nullable=True),
        sa.Column("generator:source", sa.Text(), nullable=True),
        sa.Column("harbour", sa.Text(), nullable=True),
        sa.Column("highway", sa.Text(), nullable=True),
        sa.Column("historic", sa.Text(), nullable=True),
        sa.Column("horse", sa.Text(), nullable=True),
        sa.Column("intermittent", sa.Text(), nullable=True),
        sa.Column("junction", sa.Text(), nullable=True),
        sa.Column("landuse", sa.Text(), nullable=True),
        sa.Column("layer", sa.Text(), nullable=True),
        sa.Column("leisure", sa.Text(), nullable=True),
        sa.Column("line", sa.Text(), nullable=True),
        sa.Column("lock", sa.Text(), nullable=True),
        sa.Column("man_made", sa.Text(), nullable=True),
        sa.Column("military", sa.Text(), nullable=True),
        sa.Column("motorcar", sa.Text(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("natural", sa.Text(), nullable=True),
        sa.Column("office", sa.Text(), nullable=True),
        sa.Column("oneway", sa.Text(), nullable=True),
        sa.Column("operator", sa.Text(), nullable=True),
        sa.Column("place", sa.Text(), nullable=True),
        sa.Column("population", sa.Text(), nullable=True),
        sa.Column("power", sa.Text(), nullable=True),
        sa.Column("power_source", sa.Text(), nullable=True),
        sa.Column("public_transport", sa.Text(), nullable=True),
        sa.Column("railway", sa.Text(), nullable=True),
        sa.Column("ref", sa.Text(), nullable=True),
        sa.Column("religion", sa.Text(), nullable=True),
        sa.Column("route", sa.Text(), nullable=True),
        sa.Column("service", sa.Text(), nullable=True),
        sa.Column("sidewalk", sa.Text(), nullable=True),
        sa.Column("shop", sa.Text(), nullable=True),
        sa.Column("sport", sa.Text(), nullable=True),
        sa.Column("surface", sa.Text(), nullable=True),
        sa.Column("toll", sa.Text(), nullable=True),
        sa.Column("tourism", sa.Text(), nullable=True),
        sa.Column("tower:type", sa.Text(), nullable=True),
        sa.Column("tunnel", sa.Text(), nullable=True),
        sa.Column("water", sa.Text(), nullable=True),
        sa.Column("waterway", sa.Text(), nullable=True),
        sa.Column("wetland", sa.Text(), nullable=True),
        sa.Column("width", sa.Text(), nullable=True),
        sa.Column("wood", sa.Text(), nullable=True),
        sa.Column("z_order", sa.Integer(), nullable=True),
        sa.Column(
            "tags", postgresql.HSTORE(text_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "geom",
            geoalchemy2.types.Geometry(geometry_type="POINT", srid=3857),
            nullable=True,
        ),
        sa.Column(
            "gid",
            sa.Integer(),
            server_default=sa.text(
                "nextval('openstreetmap.osm_point_gid_seq'::regclass)"
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("gid"),
        schema="openstreetmap",
    )
    op.create_index(
        op.f("ix_openstreetmap_osm_point_geom"),
        "osm_point",
        ["geom"],
        unique=False,
        schema="openstreetmap",
    )
    op.create_index(
        op.f("ix_openstreetmap_osm_point_tags"),
        "osm_point",
        ["tags"],
        unique=False,
        schema="openstreetmap",
    )
    op.create_table(
        "osm_polygon",
        sa.Column("osm_id", sa.BigInteger(), nullable=True),
        sa.Column("access", sa.Text(), nullable=True),
        sa.Column("addr:housename", sa.Text(), nullable=True),
        sa.Column("addr:housenumber", sa.Text(), nullable=True),
        sa.Column("addr:interpolation", sa.Text(), nullable=True),
        sa.Column("admin_level", sa.Text(), nullable=True),
        sa.Column("aerialway", sa.Text(), nullable=True),
        sa.Column("aeroway", sa.Text(), nullable=True),
        sa.Column("amenity", sa.Text(), nullable=True),
        sa.Column("area", sa.Text(), nullable=True),
        sa.Column("barrier", sa.Text(), nullable=True),
        sa.Column("bicycle", sa.Text(), nullable=True),
        sa.Column("brand", sa.Text(), nullable=True),
        sa.Column("bridge", sa.Text(), nullable=True),
        sa.Column("boundary", sa.Text(), nullable=True),
        sa.Column("building", sa.Text(), nullable=True),
        sa.Column("construction", sa.Text(), nullable=True),
        sa.Column("covered", sa.Text(), nullable=True),
        sa.Column("culvert", sa.Text(), nullable=True),
        sa.Column("cutting", sa.Text(), nullable=True),
        sa.Column("denomination", sa.Text(), nullable=True),
        sa.Column("disused", sa.Text(), nullable=True),
        sa.Column("embankment", sa.Text(), nullable=True),
        sa.Column("foot", sa.Text(), nullable=True),
        sa.Column("generator:source", sa.Text(), nullable=True),
        sa.Column("harbour", sa.Text(), nullable=True),
        sa.Column("highway", sa.Text(), nullable=True),
        sa.Column("historic", sa.Text(), nullable=True),
        sa.Column("horse", sa.Text(), nullable=True),
        sa.Column("intermittent", sa.Text(), nullable=True),
        sa.Column("junction", sa.Text(), nullable=True),
        sa.Column("landuse", sa.Text(), nullable=True),
        sa.Column("layer", sa.Text(), nullable=True),
        sa.Column("leisure", sa.Text(), nullable=True),
        sa.Column("line", sa.Text(), nullable=True),
        sa.Column("lock", sa.Text(), nullable=True),
        sa.Column("man_made", sa.Text(), nullable=True),
        sa.Column("military", sa.Text(), nullable=True),
        sa.Column("motorcar", sa.Text(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("natural", sa.Text(), nullable=True),
        sa.Column("office", sa.Text(), nullable=True),
        sa.Column("oneway", sa.Text(), nullable=True),
        sa.Column("operator", sa.Text(), nullable=True),
        sa.Column("place", sa.Text(), nullable=True),
        sa.Column("population", sa.Text(), nullable=True),
        sa.Column("power", sa.Text(), nullable=True),
        sa.Column("power_source", sa.Text(), nullable=True),
        sa.Column("public_transport", sa.Text(), nullable=True),
        sa.Column("railway", sa.Text(), nullable=True),
        sa.Column("ref", sa.Text(), nullable=True),
        sa.Column("religion", sa.Text(), nullable=True),
        sa.Column("route", sa.Text(), nullable=True),
        sa.Column("service", sa.Text(), nullable=True),
        sa.Column("sidewalk", sa.Text(), nullable=True),
        sa.Column("shop", sa.Text(), nullable=True),
        sa.Column("sport", sa.Text(), nullable=True),
        sa.Column("surface", sa.Text(), nullable=True),
        sa.Column("toll", sa.Text(), nullable=True),
        sa.Column("tourism", sa.Text(), nullable=True),
        sa.Column("tower:type", sa.Text(), nullable=True),
        sa.Column("tracktype", sa.Text(), nullable=True),
        sa.Column("tunnel", sa.Text(), nullable=True),
        sa.Column("water", sa.Text(), nullable=True),
        sa.Column("waterway", sa.Text(), nullable=True),
        sa.Column("wetland", sa.Text(), nullable=True),
        sa.Column("width", sa.Text(), nullable=True),
        sa.Column("wood", sa.Text(), nullable=True),
        sa.Column("z_order", sa.Integer(), nullable=True),
        sa.Column("way_area", sa.Float(), nullable=True),
        sa.Column("abandoned:aeroway", sa.Text(), nullable=True),
        sa.Column("abandoned:amenity", sa.Text(), nullable=True),
        sa.Column("abandoned:building", sa.Text(), nullable=True),
        sa.Column("abandoned:landuse", sa.Text(), nullable=True),
        sa.Column("abandoned:power", sa.Text(), nullable=True),
        sa.Column("area:highway", sa.Text(), nullable=True),
        sa.Column(
            "tags", postgresql.HSTORE(text_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "geom", geoalchemy2.types.Geometry(srid=3857), nullable=True
        ),
        sa.Column(
            "gid",
            sa.Integer(),
            server_default=sa.text(
                "nextval('openstreetmap.osm_polygon_gid_seq'::regclass)"
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("gid"),
        schema="openstreetmap",
    )
    op.create_index(
        op.f("ix_openstreetmap_osm_polygon_geom"),
        "osm_polygon",
        ["geom"],
        unique=False,
        schema="openstreetmap",
    )
    op.create_index(
        op.f("ix_openstreetmap_osm_polygon_tags"),
        "osm_polygon",
        ["tags"],
        unique=False,
        schema="openstreetmap",
    )
    op.create_table(
        "osm_rels",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("way_off", sa.SmallInteger(), nullable=True),
        sa.Column("rel_off", sa.SmallInteger(), nullable=True),
        sa.Column("parts", sa.ARRAY(sa.BigInteger()), nullable=True),
        sa.Column("members", sa.ARRAY(sa.Text()), nullable=True),
        sa.Column("tags", sa.ARRAY(sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        schema="openstreetmap",
    )
    op.create_index(
        op.f("ix_openstreetmap_osm_rels_parts"),
        "osm_rels",
        ["parts"],
        unique=False,
        schema="openstreetmap",
    )
    op.create_table(
        "osm_roads",
        sa.Column("osm_id", sa.BigInteger(), nullable=True),
        sa.Column("access", sa.Text(), nullable=True),
        sa.Column("addr:housename", sa.Text(), nullable=True),
        sa.Column("addr:housenumber", sa.Text(), nullable=True),
        sa.Column("addr:interpolation", sa.Text(), nullable=True),
        sa.Column("admin_level", sa.Text(), nullable=True),
        sa.Column("aerialway", sa.Text(), nullable=True),
        sa.Column("aeroway", sa.Text(), nullable=True),
        sa.Column("amenity", sa.Text(), nullable=True),
        sa.Column("area", sa.Text(), nullable=True),
        sa.Column("barrier", sa.Text(), nullable=True),
        sa.Column("bicycle", sa.Text(), nullable=True),
        sa.Column("brand", sa.Text(), nullable=True),
        sa.Column("bridge", sa.Text(), nullable=True),
        sa.Column("boundary", sa.Text(), nullable=True),
        sa.Column("building", sa.Text(), nullable=True),
        sa.Column("construction", sa.Text(), nullable=True),
        sa.Column("covered", sa.Text(), nullable=True),
        sa.Column("culvert", sa.Text(), nullable=True),
        sa.Column("cutting", sa.Text(), nullable=True),
        sa.Column("denomination", sa.Text(), nullable=True),
        sa.Column("disused", sa.Text(), nullable=True),
        sa.Column("embankment", sa.Text(), nullable=True),
        sa.Column("foot", sa.Text(), nullable=True),
        sa.Column("generator:source", sa.Text(), nullable=True),
        sa.Column("harbour", sa.Text(), nullable=True),
        sa.Column("highway", sa.Text(), nullable=True),
        sa.Column("historic", sa.Text(), nullable=True),
        sa.Column("horse", sa.Text(), nullable=True),
        sa.Column("intermittent", sa.Text(), nullable=True),
        sa.Column("junction", sa.Text(), nullable=True),
        sa.Column("landuse", sa.Text(), nullable=True),
        sa.Column("layer", sa.Text(), nullable=True),
        sa.Column("leisure", sa.Text(), nullable=True),
        sa.Column("line", sa.Text(), nullable=True),
        sa.Column("lock", sa.Text(), nullable=True),
        sa.Column("man_made", sa.Text(), nullable=True),
        sa.Column("military", sa.Text(), nullable=True),
        sa.Column("motorcar", sa.Text(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("natural", sa.Text(), nullable=True),
        sa.Column("office", sa.Text(), nullable=True),
        sa.Column("oneway", sa.Text(), nullable=True),
        sa.Column("operator", sa.Text(), nullable=True),
        sa.Column("place", sa.Text(), nullable=True),
        sa.Column("population", sa.Text(), nullable=True),
        sa.Column("power", sa.Text(), nullable=True),
        sa.Column("power_source", sa.Text(), nullable=True),
        sa.Column("public_transport", sa.Text(), nullable=True),
        sa.Column("railway", sa.Text(), nullable=True),
        sa.Column("ref", sa.Text(), nullable=True),
        sa.Column("religion", sa.Text(), nullable=True),
        sa.Column("route", sa.Text(), nullable=True),
        sa.Column("service", sa.Text(), nullable=True),
        sa.Column("sidewalk", sa.Text(), nullable=True),
        sa.Column("shop", sa.Text(), nullable=True),
        sa.Column("sport", sa.Text(), nullable=True),
        sa.Column("surface", sa.Text(), nullable=True),
        sa.Column("toll", sa.Text(), nullable=True),
        sa.Column("tourism", sa.Text(), nullable=True),
        sa.Column("tower:type", sa.Text(), nullable=True),
        sa.Column("tracktype", sa.Text(), nullable=True),
        sa.Column("tunnel", sa.Text(), nullable=True),
        sa.Column("water", sa.Text(), nullable=True),
        sa.Column("waterway", sa.Text(), nullable=True),
        sa.Column("wetland", sa.Text(), nullable=True),
        sa.Column("width", sa.Text(), nullable=True),
        sa.Column("wood", sa.Text(), nullable=True),
        sa.Column("z_order", sa.Integer(), nullable=True),
        sa.Column("way_area", sa.Float(), nullable=True),
        sa.Column("abandoned:aeroway", sa.Text(), nullable=True),
        sa.Column("abandoned:amenity", sa.Text(), nullable=True),
        sa.Column("abandoned:building", sa.Text(), nullable=True),
        sa.Column("abandoned:landuse", sa.Text(), nullable=True),
        sa.Column("abandoned:power", sa.Text(), nullable=True),
        sa.Column("area:highway", sa.Text(), nullable=True),
        sa.Column(
            "tags", postgresql.HSTORE(text_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "geom",
            geoalchemy2.types.Geometry(geometry_type="LINESTRING", srid=3857),
            nullable=True,
        ),
        sa.Column(
            "gid",
            sa.Integer(),
            server_default=sa.text(
                "nextval('openstreetmap.osm_roads_gid_seq'::regclass)"
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("gid"),
        schema="openstreetmap",
    )
    op.create_index(
        op.f("ix_openstreetmap_osm_roads_geom"),
        "osm_roads",
        ["geom"],
        unique=False,
        schema="openstreetmap",
    )
    op.create_index(
        op.f("ix_openstreetmap_osm_roads_tags"),
        "osm_roads",
        ["tags"],
        unique=False,
        schema="openstreetmap",
    )
    op.create_table(
        "osm_ways",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("nodes", sa.ARRAY(sa.BigInteger()), nullable=False),
        sa.Column("tags", sa.ARRAY(sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        schema="openstreetmap",
    )
    op.create_index(
        op.f("ix_openstreetmap_osm_ways_nodes"),
        "osm_ways",
        ["nodes"],
        unique=False,
        schema="openstreetmap",
    )
    op.drop_table("spatial_ref_sys")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "spatial_ref_sys",
        sa.Column("srid", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "auth_name",
            sa.VARCHAR(length=256),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "auth_srid", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "srtext",
            sa.VARCHAR(length=2048),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "proj4text",
            sa.VARCHAR(length=2048),
            autoincrement=False,
            nullable=True,
        ),
        sa.CheckConstraint(
            "(srid > 0) AND (srid <= 998999)",
            name="spatial_ref_sys_srid_check",
        ),
        sa.PrimaryKeyConstraint("srid", name="spatial_ref_sys_pkey"),
    )
    op.drop_index(
        op.f("ix_openstreetmap_osm_ways_nodes"),
        table_name="osm_ways",
        schema="openstreetmap",
    )
    op.drop_table("osm_ways", schema="openstreetmap")
    op.drop_index(
        op.f("ix_openstreetmap_osm_roads_tags"),
        table_name="osm_roads",
        schema="openstreetmap",
    )
    op.drop_index(
        op.f("ix_openstreetmap_osm_roads_geom"),
        table_name="osm_roads",
        schema="openstreetmap",
    )
    op.drop_table("osm_roads", schema="openstreetmap")
    op.drop_index(
        op.f("ix_openstreetmap_osm_rels_parts"),
        table_name="osm_rels",
        schema="openstreetmap",
    )
    op.drop_table("osm_rels", schema="openstreetmap")
    op.drop_index(
        op.f("ix_openstreetmap_osm_polygon_tags"),
        table_name="osm_polygon",
        schema="openstreetmap",
    )
    op.drop_index(
        op.f("ix_openstreetmap_osm_polygon_geom"),
        table_name="osm_polygon",
        schema="openstreetmap",
    )
    op.drop_table("osm_polygon", schema="openstreetmap")
    op.drop_index(
        op.f("ix_openstreetmap_osm_point_tags"),
        table_name="osm_point",
        schema="openstreetmap",
    )
    op.drop_index(
        op.f("ix_openstreetmap_osm_point_geom"),
        table_name="osm_point",
        schema="openstreetmap",
    )
    op.drop_table("osm_point", schema="openstreetmap")
    op.drop_table("osm_nodes", schema="openstreetmap")
    op.drop_index(
        op.f("ix_openstreetmap_osm_line_tags"),
        table_name="osm_line",
        schema="openstreetmap",
    )
    op.drop_index(
        op.f("ix_openstreetmap_osm_line_geom"),
        table_name="osm_line",
        schema="openstreetmap",
    )
    op.drop_table("osm_line", schema="openstreetmap")
    # ### end Alembic commands ###
