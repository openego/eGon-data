[gh-actions]
# Map python versions used in build.yml to tox environments
# This mapping is used by tox-gh-actions
python =
    3.6: py36, clean, check, docs, report
    3.7: py37, clean, check, docs, report
    3.8: py38, clean, check, docs, report

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[tox]
envlist =
    clean,
    check,
    docs,
    py{36,37,38}-{cover,nocov}-{linux,macos,windows},
    report

[testenv]
basepython =
    {bootstrap,clean,check,report,docs,codecov,coveralls}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    pytest
    #pytest-travis-fold
commands =
    {posargs:pytest -vv --ignore=src}

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py --no-env

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort >= 5
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8
    isort --verbose --check-only --diff --filter-files .


[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls []



[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[testenv:py36-cover-{linux,macos,windows}]
basepython = {env:TOXPYTHON:python3.6}
setenv =
    {[testenv]setenv}
usedevelop = true
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py36-nocov-{linux,macos,windows}]
basepython = {env:TOXPYTHON:python3.6}

[testenv:py37-cover-{linux,macos,windows}]
basepython = {env:TOXPYTHON:python3.7}
setenv =
    {[testenv]setenv}
usedevelop = true
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py37-nocov-{linux,macos,windows}]
basepython = {env:TOXPYTHON:python3.7}

[testenv:py38-cover-{linux,macos,windows}]
basepython = {env:TOXPYTHON:python3.8}
setenv =
    {[testenv]setenv}
usedevelop = true
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv}
deps =
    {[testenv]deps}
    pytest-cov

[testenv:py38-nocov-{linux,macos,windows}]
basepython = {env:TOXPYTHON:python3.8}
